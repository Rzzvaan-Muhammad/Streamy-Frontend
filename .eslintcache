[{"C:\\LearningReact\\Twitch-tv\\Clint\\src\\index.js":"1","C:\\LearningReact\\Twitch-tv\\Clint\\src\\App.js":"2","C:\\LearningReact\\Twitch-tv\\Clint\\src\\reportWebVitals.js":"3","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\Header.jsx":"4","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\GoogleAuth.js":"5","C:\\LearningReact\\Twitch-tv\\Clint\\src\\reducers\\index.js":"6","C:\\LearningReact\\Twitch-tv\\Clint\\src\\actions\\index.js":"7","C:\\LearningReact\\Twitch-tv\\Clint\\src\\reducers\\Auth2reducers.jsx":"8","C:\\LearningReact\\Twitch-tv\\Clint\\src\\actions\\types.js":"9","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Apis\\streams.js":"10","C:\\LearningReact\\Twitch-tv\\Clint\\src\\reducers\\streamReducer.jsx":"11","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamCreate.jsx":"12","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamDelete.jsx":"13","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamEdit.jsx":"14","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamList.jsx":"15","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamShow.jsx":"16","C:\\LearningReact\\Twitch-tv\\Clint\\src\\history.js":"17","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamForm.jsx":"18","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\Model.jsx":"19","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\ModelComponent.jsx":"20","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\Footer.jsx":"21"},{"size":829,"mtime":1611185360765,"results":"22","hashOfConfig":"23"},{"size":1176,"mtime":1611481140689,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1390,"mtime":1611481381198,"results":"26","hashOfConfig":"23"},{"size":1917,"mtime":1611211866994,"results":"27","hashOfConfig":"23"},{"size":296,"mtime":1611191976165,"results":"28","hashOfConfig":"23"},{"size":1572,"mtime":1611214847563,"results":"29","hashOfConfig":"23"},{"size":554,"mtime":1611074925092,"results":"30","hashOfConfig":"23"},{"size":312,"mtime":1611187594974,"results":"31","hashOfConfig":"23"},{"size":103,"mtime":1611184432109,"results":"32","hashOfConfig":"23"},{"size":748,"mtime":1611208568444,"results":"33","hashOfConfig":"23"},{"size":421,"mtime":1611211999408,"results":"34","hashOfConfig":"23"},{"size":755,"mtime":1611468965823,"results":"35","hashOfConfig":"23"},{"size":791,"mtime":1611284633028,"results":"36","hashOfConfig":"23"},{"size":4296,"mtime":1611480015217,"results":"37","hashOfConfig":"23"},{"size":1193,"mtime":1611478655546,"results":"38","hashOfConfig":"23"},{"size":89,"mtime":1611203768915,"results":"39","hashOfConfig":"23"},{"size":1845,"mtime":1611213537652,"results":"40","hashOfConfig":"23"},{"size":325,"mtime":1611289994665,"results":"41","hashOfConfig":"23"},{"size":2068,"mtime":1611290163987,"results":"42","hashOfConfig":"23"},{"size":1245,"mtime":1611481614795,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1sw0t6s",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\LearningReact\\Twitch-tv\\Clint\\src\\index.js",[],["92","93"],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\App.js",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\reportWebVitals.js",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\Header.jsx",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\GoogleAuth.js",["94"],"import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { signedIn, signedOut } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nconst GoogleAuth = (props) => {\r\n  useEffect(() => {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"1036408886636-21cfbclejj72evh1bk3gu6tne0te0vks.apps.googleusercontent.com\",\r\n          scope: \"email\",\r\n        })\r\n        .then(() => {\r\n          let auth = window.gapi.auth2.getAuthInstance();\r\n          auth.isSignedIn.get()\r\n            ? props.signedIn(\r\n                auth.currentUser.get().getId(),\r\n                auth.currentUser.get().getBasicProfile().getName()\r\n              )\r\n            : props.signedOut();\r\n\r\n          auth.isSignedIn.listen((isSignedIn) => {\r\n            if (isSignedIn) {\r\n              props.signedIn(\r\n                auth.currentUser.get().getId(),\r\n                auth.currentUser.get().getBasicProfile().getName()\r\n              );\r\n            } else {\r\n              props.signedOut();\r\n            }\r\n          });\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {props.auth === true ? (\r\n        <Button\r\n          style={{ color: \"#4caf50\" }}\r\n          onClick={() => window.gapi.auth2.getAuthInstance().signOut()}\r\n        >\r\n          <AccountCircleIcon />\r\n          {props.userName}\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={() => window.gapi.auth2.getAuthInstance().signIn()}\r\n        >\r\n          Login\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.Auth.isSignedIn,\r\n    userName: state.Auth.userName,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { signedIn, signedOut })(GoogleAuth);\r\n","C:\\LearningReact\\Twitch-tv\\Clint\\src\\reducers\\index.js",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\actions\\index.js",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\reducers\\Auth2reducers.jsx",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\actions\\types.js",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Apis\\streams.js",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\reducers\\streamReducer.jsx",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamCreate.jsx",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamDelete.jsx",["95"],"import React, { useEffect } from \"react\";\r\nimport Modal from \"../Model\";\r\nimport { connect } from \"react-redux\";\r\nimport History from \"../../history\";\r\n\r\nimport { fetchStream, deleteStream } from \"./../../actions/index\";\r\n\r\nconst StreamDelete = (props) => {\r\n  useEffect(() => {\r\n    props.fetchStream(props.match.params.id);\r\n  }, []);\r\n  const onDelete = () => {\r\n    props.deleteStream(props.match.params.id);\r\n    History.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <Modal title={props.stream.title} onDelete={onDelete} />\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state, getProps) => {\r\n  return { stream: state.streams[getProps.match.params.id] };\r\n};\r\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(\r\n  StreamDelete\r\n);\r\n","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamEdit.jsx",["96"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream, editStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\nimport _ from \"lodash\";\r\nconst StreamEdit = (props) => {\r\n  useEffect(() => {\r\n    props.fetchStream(props.match.params.id);\r\n  }, []);\r\n  const onSubmit = (FormValues) => {\r\n    props.editStream(props.match.params.id, FormValues);\r\n  };\r\n  return (\r\n    <>\r\n      <StreamForm\r\n        onSubmit={onSubmit}\r\n        initialValues={_.pick(props.stream, \"title\", \"description\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state, getState) => {\r\n  return { stream: state.streams[getState.match.params.id] };\r\n};\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(\r\n  StreamEdit\r\n);\r\n","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamList.jsx",["97"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStreams } from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport BorderColorTwoToneIcon from \"@material-ui/icons/BorderColorTwoTone\";\r\nimport DeleteSweepTwoToneIcon from \"@material-ui/icons/DeleteSweepTwoTone\";\r\nimport EditSharpIcon from \"@material-ui/icons/EditSharp\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  createIcon: {\r\n    height: 50,\r\n    width: 50,\r\n    justifySelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst StreamList = (props) => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    props.fetchStreams();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"xl\">\r\n        <div className=\"StreamList\">\r\n          {props.StreamList.map((row) => (\r\n            <Box\r\n              key={row.id}\r\n              style={{ marginTop: \"1%\" }}\r\n              width={1 / 3}\r\n              bgcolor=\"grey.300\"\r\n              p={1}\r\n            >\r\n              <Card className={`CardList ${classes.root}`}>\r\n                <div className={`details ${classes.details}`}>\r\n                  <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                      <Link\r\n                        style={{ textDecoration: \"none\", color: \"#555\" }}\r\n                        to={`/stream/show/${row.id}`}\r\n                      >\r\n                        {row.title}\r\n                      </Link>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                      {row.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  {props.UserId === row.userId ? (\r\n                    <div className={classes.controls}>\r\n                      <Link to={`/stream/edit/${row.id}`}>\r\n                        <IconButton aria-label=\"previous\">\r\n                          <EditSharpIcon />\r\n                        </IconButton>\r\n                      </Link>\r\n                      <Link to={`/stream/delete/${row.id}`}>\r\n                        <IconButton aria-label=\"play/pause\">\r\n                          <DeleteSweepTwoToneIcon\r\n                            className={classes.playIcon}\r\n                          />\r\n                        </IconButton>\r\n                      </Link>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <CardMedia\r\n                  className={classes.cover}\r\n                  image={`https://picsum.photos/40${row.id}`}\r\n                  title=\"Live from space album cover\"\r\n                />\r\n              </Card>\r\n            </Box>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          {props.isSignedIn ? (\r\n            <IconButton>\r\n              <Link to=\"/stream/new\">\r\n                <BorderColorTwoToneIcon className={classes.createIcon} />\r\n              </Link>\r\n            </IconButton>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    StreamList: Object.values(state.streams),\r\n    UserId: state.Auth.userId,\r\n    isSignedIn: state.Auth.isSignedIn,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\r\n","C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamShow.jsx",["98"],"import React, { useEffect, useRef } from \"react\";\r\nimport flv from \"flv.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\nconst StreamShow = (props) => {\r\n  const createRef = useRef(null);\r\n  useEffect(() => {\r\n    props.fetchStream(props.match.params.id);\r\n    let player = null;\r\n    if (!props.stream) {\r\n      return;\r\n    } else {\r\n      player = flv.createPlayer({\r\n        type: \"flv\",\r\n        url: `http://localhost:8000/live/${props.match.params.id}.flv`,\r\n      });\r\n      player.attachMediaElement(createRef.current);\r\n      player.load();\r\n    }\r\n    return () => {\r\n      player.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {props.stream ? (\r\n        <div>\r\n          <video\r\n            ref={createRef}\r\n            src=\"\"\r\n            style={{ width: \"100%\" }}\r\n            controls\r\n          ></video>\r\n          <h3>{props.stream.title}</h3>\r\n        </div>\r\n      ) : (\r\n        <h2>loading...</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, getProps) => {\r\n  return { stream: state.streams[getProps.match.params.id] };\r\n};\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\r\n","C:\\LearningReact\\Twitch-tv\\Clint\\src\\history.js",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\streams\\StreamForm.jsx",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\Model.jsx",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\ModelComponent.jsx",[],"C:\\LearningReact\\Twitch-tv\\Clint\\src\\Components\\Footer.jsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":36,"column":6,"nodeType":"105","endLine":36,"endColumn":8,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"104","line":11,"column":6,"nodeType":"105","endLine":11,"endColumn":8,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"104","line":9,"column":6,"nodeType":"105","endLine":9,"endColumn":8,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"104","line":54,"column":6,"nodeType":"105","endLine":54,"endColumn":8,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"104","line":23,"column":6,"nodeType":"105","endLine":23,"endColumn":8,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["113"],["114"],["115"],["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"118","fix":"121"},{"desc":"118","fix":"122"},{"desc":"118","fix":"123"},"Update the dependencies array to be: [props]",{"range":"124","text":"125"},{"range":"126","text":"125"},{"range":"127","text":"125"},{"range":"128","text":"125"},{"range":"129","text":"125"},[1220,1222],"[props]",[332,334],[312,314],[1544,1546],[660,662]]